<?xml version="1.0"?>
<robot name="four_wheeled_robot" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:property name="wheel_radius" value="0.033" />
  <xacro:property name="wheel_thickness" value="0.025" />
  <xacro:property name="base_width" value="0.25" />
  <xacro:property name="base_length" value="0.30" />
  <xacro:property name="base_height" value="0.08" />
  <xacro:property name="base_mass" value="1.0" />
  <xacro:property name="wheel_mass" value="0.1" />

  <xacro:macro name="default_inertial" params="mass">
    <inertial>
      <mass value="${mass}" />
      <inertia ixx="${(mass/12.0) * (base_height*base_height + base_length*base_length)}" ixy="0.0" ixz="0.0"
               iyy="${(mass/12.0) * (base_width*base_width + base_length*base_length)}" iyz="0.0"
               izz="${(mass/12.0) * (base_width*base_width + base_height*base_height)}" />
    </inertial>
  </xacro:macro>

  <xacro:macro name="wheel_macro" params="prefix x_pos y_pos is_front">
    <link name="${prefix}_wheel_link">
      <visual>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_thickness}" />
        </geometry>
        <material name="Black" />
      </visual>
      <collision>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_thickness}" />
        </geometry>
      </collision>
      <xacro:default_inertial mass="${wheel_mass}"/>
    </link>

    <joint name="${prefix}_wheel_joint" type="continuous">
      <parent link="base_link" />
      <child link="${prefix}_wheel_link" />
      <origin xyz="${x_pos} ${y_pos} ${-(base_height/2) - (wheel_radius/2)}" rpy="1.5708 0 0" />
      <axis xyz="0 1 0" />
    </joint>

    <gazebo reference="${prefix}_wheel_link">
        <material>Gazebo/Black</material>
        <surface>
            <friction>
                <ode>
                    <mu>1.0</mu>
                    <mu2>1.0</mu2>
                </ode>
            </friction>
        </surface>
    </gazebo>
  </xacro:macro>

  <link name="base_link">
    <visual>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}" />
      </geometry>
      <material name="Blue">
        <color rgba="0.0 0.0 0.8 1.0" />
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}" />
      </geometry>
    </collision>
    <xacro:default_inertial mass="${base_mass}"/>
  </link>

  <xacro:property name="x_offset" value="${base_length/2 - wheel_radius}" />
  <xacro:property name="y_offset" value="${base_width/2 + wheel_thickness/2}" />

  <xacro:wheel_macro prefix="left_front" x_pos="${x_offset}" y_pos="${y_offset}" is_front="true" />
  <xacro:wheel_macro prefix="right_front" x_pos="${x_offset}" y_pos="${-y_offset}" is_front="true" />

  <xacro:wheel_macro prefix="left_rear" x_pos="${-x_offset}" y_pos="${y_offset}" is_front="false" />
  <xacro:wheel_macro prefix="right_rear" x_pos="${-x_offset}" y_pos="${-y_offset}" is_front="false" />

  <gazebo>
    <plugin filename="libros2_gazebo_spline_diff_drive.so" name="gazebo_ros_diff_drive">
        <left_front_joint>left_front_wheel_joint</left_front_joint>
        <right_front_joint>right_front_wheel_joint</right_front_joint>
        <left_rear_joint>left_rear_wheel_joint</left_rear_joint>
        <right_rear_joint>right_rear_wheel_joint</right_rear_joint>

        <wheel_separation>${base_width}</wheel_separation>
        <wheel_radius>${wheel_radius}</wheel_radius>

        <odom_frame>odom</odom_frame>
        <robot_base_frame>base_link</robot_base_frame>
        <publish_odom>true</publish_odom>
        <publish_wheel_tf>true</publish_wheel_tf>
        <command_topic>cmd_vel</command_topic>
        <linear_acceleration_limit>0.0</linear_acceleration_limit>
        <angular_acceleration_limit>0.0</angular_acceleration_limit>
    </plugin>
  </gazebo>
  
  <gazebo reference="base_link">
    <plugin name="ray_sensor" filename="libgazebo_ros_ray_sensor.so">
      <ros>
        <namespace>/</namespace>
        <argument>--ros-args --remap /scan:=/laser_scan</argument>
      </ros>
      <output_type>sensor_msgs/msg/LaserScan</output_type>
      <frame_name>base_link</frame_name>
    </plugin>
  </gazebo>

</robot>
